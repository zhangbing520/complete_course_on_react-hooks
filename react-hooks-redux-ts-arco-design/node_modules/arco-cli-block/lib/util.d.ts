import * as prettier from 'prettier';
import { Color } from 'ora';
declare type DependenceInfoMap = {
    [propName: string]: string;
};
/**
 * Default logger implementation with ora
 */
export declare class DefaultLogger {
    private _spinner;
    constructor(startText: string);
    log(text: string, color?: Color): void;
    succeed(text: string): void;
    fail(text: string): void;
}
/**
 * Get the scope and name of the NPM package
 */
export declare function getPackageScopeAndName(npmName: string): {
    scope: string;
    name: string;
};
/**
 * Get the NPM package download address
 */
export declare function getNpmTarSrc(name: string): Promise<{
    npmTarSrc: any;
    version: any;
}>;
/**
 * Use wget to download files
 */
export declare function wgetAsync(src: string, output: string, options?: {}): Promise<string>;
/**
 * Get dependencies already installed
 */
export declare function getExistingDependencies(filePath: string): Record<string, string>;
/**
 * Get dependencies need to install
 */
export declare function getNewDependencies(existingDependencies: DependenceInfoMap, willInstalledDependencies: DependenceInfoMap): string[];
/**
 * Get the name and version of the dependent package
 */
export declare function getDependenceNameAndVersion(dependencies: DependenceInfoMap, filters: (string | undefined)[]): string;
/**
 * Install npm dependencies
 */
export declare function installDependency(npmName: string, cwdPath: string, logFun: (msg: string) => void): Promise<unknown>;
/**
 * Format error message
 */
export declare function stringifyError(e: Error): string;
export declare function formatCodeWithPrettierAndEslint(code: string, filename: string, parser?: prettier.BuiltInParserName): Promise<string>;
export {};
