"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkLogin = exports.isLogin = void 0;
const arco_cli_dev_utils_1 = require("arco-cli-dev-utils");
const login_1 = __importDefault(require("./login"));
const request_1 = __importDefault(require("./request"));
const locale_1 = __importDefault(require("./locale"));
const isLogin = () => __awaiter(void 0, void 0, void 0, function* () {
    const config = (0, arco_cli_dev_utils_1.getGlobalInfo)();
    if (!config || !config.userInfo) {
        return false;
    }
    try {
        yield request_1.default.get('userInfo');
        return true;
    }
    catch (err) {
        return false;
    }
});
exports.isLogin = isLogin;
/**
 * check login status
 */
const checkLogin = (autoLogin = true) => __awaiter(void 0, void 0, void 0, function* () {
    const _isLogin = yield (0, exports.isLogin)();
    if (!_isLogin) {
        if (autoLogin) {
            yield (0, login_1.default)();
        }
        else {
            arco_cli_dev_utils_1.print.error(locale_1.default.TIP_LOGIN_FIRST);
            arco_cli_dev_utils_1.print.info('$ arco login');
            process.exit();
        }
    }
});
exports.checkLogin = checkLogin;
