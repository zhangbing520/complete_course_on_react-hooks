"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = __importDefault(require("axios"));
const arco_cli_dev_utils_1 = require("arco-cli-dev-utils");
const ARCO_TOKEN = 'x-arco-token';
const request = (method, { url, data = {}, option = {}, }) => {
    const cliConfig = (0, arco_cli_dev_utils_1.getGlobalInfo)();
    const instance = axios_1.default.create({
        baseURL: `${cliConfig.host.arco}/material/api/`,
    });
    option.headers = Object.assign(Object.assign({}, option.headers), { [ARCO_TOKEN]: (option.headers && option.headers[ARCO_TOKEN]) || (cliConfig && cliConfig[ARCO_TOKEN]) || '', 'x-arco-dev': '1' });
    const req = method === 'get' || method === 'delete'
        ? instance[method](url, option)
        : instance[method](url, data, option);
    return req
        .then((res) => {
        return res.data;
    })
        .catch((err) => {
        arco_cli_dev_utils_1.print.error(err);
        return Promise.reject(err);
    });
};
exports.default = {
    all: (arr) => {
        return axios_1.default.all(arr);
    },
    get: (url, option) => request('get', { url, option }),
    delete: (url, option) => request('delete', { url, option }),
    post: (url, data, option) => request('post', { url, option, data }),
    put: (url, data, option) => request('put', { url, option, data }),
};
