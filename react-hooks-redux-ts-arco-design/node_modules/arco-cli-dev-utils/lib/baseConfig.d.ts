export declare type Locale = 'zh-CN' | 'en-US';
export declare type Answer = string | number | boolean | string[];
export declare type FilterPropertyRule = {
    type: 'include' | 'exclude';
    value: string[];
};
export declare type Filter = {
    ENV_MONOREPO?: boolean;
    type?: FilterPropertyRule;
    framework?: FilterPropertyRule;
    version?: string;
};
export declare type Message = string | Record<Locale, string>;
export declare type CliQuestion = {
    type: 'list' | 'input' | 'checkbox';
    message: Message;
    default?: Answer;
    choices?: Array<{
        label: Message;
        value: Answer;
        _filter?: Filter;
        _labelAsValue?: boolean;
    }>;
    validate?: {
        rule: 'required';
        message: Message;
    };
    allowCreate?: boolean;
};
export declare type QNode = {
    _key: string;
    _filter?: Filter;
    _question: CliQuestion | QNode[];
};
export declare type CliBaseConfig = {
    question: Record<string, QNode[]>;
    global: Record<string, any>;
};
export declare function getBaseConfig(): Promise<any>;
