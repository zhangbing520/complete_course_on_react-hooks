"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const open_1 = __importDefault(require("open"));
const fs_extra_1 = __importDefault(require("fs-extra"));
const arco_cli_dev_utils_1 = require("arco-cli-dev-utils");
function preview({ port = 9003, path: previewPath = '', teamSite = false }) {
    const hostArco = (0, arco_cli_dev_utils_1.getGlobalInfo)().host.arco;
    const query = `localPreviewUrl=http://localhost:${port}${previewPath}`;
    const openBrowser = (url) => {
        (0, open_1.default)(url);
        console.log(`Visit ${url}`);
    };
    if (teamSite) {
        (0, arco_cli_dev_utils_1.fileServer)(port);
        openBrowser(`${hostArco}/material/team/SitePreview?${query}`);
    }
    else {
        let packageJson;
        try {
            packageJson = fs_extra_1.default.readJsonSync(path_1.default.resolve(process.cwd(), 'package.json'));
        }
        catch (err) {
            if (err.code === 'ENOENT') {
                arco_cli_dev_utils_1.print.error('[arco preview]', 'No valid package.json found');
            }
            else {
                arco_cli_dev_utils_1.print.error(err);
            }
            process.exit(1);
        }
        (0, arco_cli_dev_utils_1.fileServer)(port);
        openBrowser(`${hostArco}/material/detail?name=${packageJson.name}&${query}`);
    }
}
exports.default = preview;
